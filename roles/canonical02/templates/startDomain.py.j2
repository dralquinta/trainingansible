#Author: denny.alquinta@oracle.com
#Automated script which handles full domain startup. This relies on top of wl and nm key hashes which must exist previously
#This script must always be excecuted through bash wrapper startDomain.sh

#Variables
OFA_DIR='{{ofa_dir}}'
DOMAIN_NAME='{{domain_name}}'
NODEMANAGER_PORT='{{node_manager_port}}'
ADMINSERVER_PORT='{{admin_server_port}}'
MACHINE='{{ hostvars[groups['machines'][0]]['ansible_facts']['hostname'] }}'
PROTOCOL_TYPE='plain'
ADM='AdminServer'
CLUSTERS=['{{cluster_name}}']

#AutoConstructed Variables
NM_CONFIG=OFA_DIR+'/app/oracle/config/control/'+DOMAIN_NAME+'/keys/nm.config'
NM_KEY=OFA_DIR+'/app/oracle/config/control/'+DOMAIN_NAME+'/keys/nm.key'

WL_CONFIG=OFA_DIR+'/app/oracle/config/control/'+DOMAIN_NAME+'/keys/wl.config'
WL_KEY=OFA_DIR+'/app/oracle/config/control/'+DOMAIN_NAME+'/keys/wl.key'


ADMIN_SERVER_URL='t3://'+MACHINE+':'+ADMINSERVER_PORT
PATH_DOMAIN=OFA_DIR+'/app/oracle/config/domains/'+DOMAIN_NAME

LOG_DIR=OFA_DIR+'/app/oracle/config/logs/'+DOMAIN_NAME+'/'


### START ADMINSERVER ####
nmConnect(userConfigFile=NM_CONFIG,userKeyFile=NM_KEY,host=MACHINE,port=NODEMANAGER_PORT,domainName=DOMAIN_NAME,domainDir=PATH_DOMAIN,nmType=PROTOCOL_TYPE) 

arg = "Arguments= -Xms3g -Xmx3g -Djava.security.egd=file:/dev/./urandom -Dweblogic.data.canTransferAnyFile=true -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -Xloggc:"+LOG_DIR+ADM+"/gc.log -Djava.net.preferIPv4Stack=true -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath="+LOG_DIR+ADM+"/dump -Dweblogic.log.RedirectStdoutToServerLogEnabled=true -Dweblogic.management.disableManagedServerNotifications=true -Dweblogic.nodemanager.ServiceEnabled=true -Dweblogic.Stdout="+LOG_DIR+ADM+"/"+ADM+".out -Dweblogic.threadpool.MinPoolSize=100 -Dweblogic.UseEnhancedIncrementAdvisor=false -Dweblogic.work.statedump=true -Dweblogic.work.includeHogsInSelfTuningStats=true" 


prps = makePropertiesObject (arg)

if (nmServerStatus(ADM)  != 'RUNNING'):
        nmStart(ADM, props=prps)

connect(userConfigFile=WL_CONFIG, userKeyFile=WL_KEY,url='t3://'+MACHINE+':'+ADMINSERVER_PORT)


for CLUSTER in CLUSTERS:
   start(CLUSTER,'Cluster',block='false')

disconnect()

nmDisconnect()

print 'Domain '+DOMAIN_NAME+' successfully started'

